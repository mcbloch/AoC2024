# Wip on part 1. I have horizontal and vertical + reversed, still need to figure out diagonals.

Register('([\\s\\S]*)',true,false,false)
Find_/_Replace({'option':'Regex','string':'.+'},'h_norm\\nh_reverse\\nv_norm\\nv_reverse',true,false,true,true)
Fork('\\n','\\n',false)
Conditional_Jump('h_norm',true,'h_reverse',10)
Label('h_norm')
Find_/_Replace({'option':'Regex','string':'.+'},'$R0',true,false,true,true)
Jump('count',10)
Label('h_reverse')
Conditional_Jump('h_reverse',true,'v_norm',10)
Find_/_Replace({'option':'Regex','string':'.+'},'$R0',true,false,true,true)
Reverse('Character')
Jump('count',10)
Label('v_norm')
Conditional_Jump('v_norm',true,'v_reverse',10)
Find_/_Replace({'option':'Regex','string':'.+'},'$R0',true,false,true,true)
Add_line_numbers()
Fork('\\n','\\n',false)
Register('^ *([\\S]*)\\s',true,false,false)
Find_/_Replace({'option':'Regex','string':' *\\d+ *(\\w+)'},'$1',true,false,true,false)
Split('','\\n')
Add_line_numbers()
Find_/_Replace({'option':'Regex','string':' *(\\d+) *(\\w)'},'$1_$R1_$2',true,false,true,false)
Merge(false)
Sort('Line feed',false,'Numeric')
Find_/_Replace({'option':'Regex','string':'(\\d+_1_)'},'|$1',true,false,true,false)
Find_/_Replace({'option':'Regex','string':'\\d+_\\d+_(\\w)\\n?'},'$1',true,false,true,false)
Jump('count',10)
Label('v_reverse')
Find_/_Replace({'option':'Regex','string':'.+'},'$R0',true,false,true,true)
Add_line_numbers()
Fork('\\n','\\n',false)
Register('^ *([\\d]+)\\s',true,false,false)
Find_/_Replace({'option':'Regex','string':' *\\d+ *(\\w+)'},'$1',true,false,true,false)
Split('','\\n')
Add_line_numbers()
Find_/_Replace({'option':'Regex','string':' *(\\d+)\\s(\\w)'},'$1_$R1_$2',true,false,true,false)
Merge(false)
Sort('Line feed',false,'Numeric')
Find_/_Replace({'option':'Regex','string':'(\\d+_1_)'},'|$1',true,false,true,false)
Find_/_Replace({'option':'Regex','string':'\\d+_\\d+_(\\w)\\n?'},'$1',true,false,true,false)
Reverse('Character')
Jump('count',10)
Label('count')
Count_occurrences({'option':'Regex','string':'XMAS'})
